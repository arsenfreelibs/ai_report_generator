<user_request>
Создай визуальный отчёт с двумя карточками: одна отображает количество номинальных сайтов (candidate_site_id IS NULL), другая — количество завершённых кандидатских сайтов (candidate_site_id IS NOT NULL и status NOT IN ('Inactive','New','Decommissioned')), каждая карточка кликабельна и ведёт по соответствующей ссылке.
</user_request>

<description>
Отчет реализует подсчет статистики по сущности Site с двумя основными метриками: количество номинальных сайтов и количество завершенных кандидатских сайтов.

Модель: site
Используемые поля:
candidate_site_id (тип: integer / reference):
Используется для определения номинальности: IS NULL → сайт номинальный.
IS NOT NULL → сайт является кандидатом.
status (тип: string):
Для кандидатов фильтрация по статусу: включает только 'active', 'Temporary', 'Relocated'.

Серверная логика (Node.js, async function):
Получает модель site с отключенной проверкой прав (check_permission: { all: false }).
Выполняет два запроса:
siteModel.find({ candidate_site_id: 'ISNULL' }).count() — количество номинальных сайтов.
siteModel.find({ candidate_site_id: 'ISNOTNULL', status: ['active', 'Temporary', 'Relocated'] }).count() — количество завершённых кандидатских сайтов.

Возвращает структуру:
{
  main: {
    nominalSitesCount,
    completedCandidateSitesCount,
  }
}
</description>

<server_script>
async function(scope) {
  const siteModel = (await p.getModel('site')).setOptions({ check_permission: { all: false } });

  // Подсчет количества номинальных сайтов: Candidate Site ID пустой
  const nominalSitesCount = await siteModel.find({ candidate_site_id: 'ISNULL' }).count();

  // Подсчет количества завершенных кандидатских сайтов
  const completedCandidateSitesCount = await siteModel
    .find({
      candidate_site_id: 'ISNOTNULL',
      status: ['active', 'Temporary', 'Relocated']
    })
    .count();

  return {
    main: {
      nominalSitesCount,
      completedCandidateSitesCount,
    },
  };
}
</server_script>