<user_request>
Create an interactive spline graph that displays time-series data with smooth curves. The chart should include data points as circles, allow zooming and panning, have a scrollbar for navigation, and include a slider control to adjust the smoothing/tension of the spline curve. Generate sample data showing values over time with some randomness to demonstrate the smoothing effect.
</user_request>

<description>
This example creates an interactive spline (smoothed line) chart using amCharts 5. Key features include:

- **Smooth Line Series**: Uses SmoothedXLineSeries to create curved lines between data points
- **Interactive Controls**: Pan and zoom functionality with mouse/touch gestures
- **Data Points**: Circular bullets/markers on each data point with customizable styling
- **Time-based X-axis**: DateAxis configured for daily intervals with proper formatting
- **Scrollbar**: Horizontal scrollbar for easy navigation through large datasets
- **Smoothing Control**: Interactive slider to adjust the tension/smoothing of the spline curve in real-time
- **Tooltips**: Hover tooltips showing data values
- **Animations**: Smooth entrance animations when the chart loads
- **Sample Data**: Auto-generated random time-series data for demonstration

The chart is fully responsive and includes cursor tracking. The smoothing slider allows users to adjust how curved vs. angular the line appears, making it useful for different types of data visualization needs.
</description>

<client_script>
function(chartdiv, scope) {
  /* Imports */
import am5index from "@amcharts/amcharts5/index";
import am5xy from "@amcharts/amcharts5/xy";
import am5themes_Animated from "@amcharts/amcharts5/themes/Animated";

/* Chart code */
// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
let root = am5.Root.new(chartdiv);

// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root)
]);


// Create chart
// https://www.amcharts.com/docs/v5/charts/xy-chart/
let chart = root.container.children.push(am5xy.XYChart.new(root, {
  panX: true,
  panY: true,
  wheelX: "panX",
  wheelY: "zoomX",
  pinchZoomX: true,
  paddingLeft: 0
}));

// Add cursor
// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
let cursor = chart.set("cursor", am5xy.XYCursor.new(root, {
  behavior: "none"
}));
cursor.lineY.set("visible", false);


// Generate random data
let date = new Date();
date.setHours(0, 0, 0, 0);
let value = 100;

function generateData() {
  value = Math.round((Math.random() * 10 - 5) + value);
  am5.time.add(date, "day", 1);
  return {
    date: date.getTime(),
    value: value
  };
}

function generateDatas(count) {
  let data = [];
  for (var i = 0; i < count; ++i) {
    data.push(generateData());
  }
  return data;
}


// Create axes
// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
let xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {
  maxDeviation: 0.5,
  baseInterval: {
    timeUnit: "day",
    count: 1
  },
  renderer: am5xy.AxisRendererX.new(root, {
    minGridDistance: 80,
    minorGridEnabled: true,
    pan: "zoom"
  }),
  tooltip: am5.Tooltip.new(root, {})
}));

let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
  maxDeviation: 1,
  renderer: am5xy.AxisRendererY.new(root, {
    pan: "zoom"
  })
}));


// Add series
// https://www.amcharts.com/docs/v5/charts/xy-chart/series/
let series = chart.series.push(am5xy.SmoothedXLineSeries.new(root, {
  name: "Series",
  xAxis: xAxis,
  yAxis: yAxis,
  valueYField: "value",
  valueXField: "date",
  sequencedInterpolation: true,
  tooltip: am5.Tooltip.new(root, {
    labelText: "{valueY}"
  })
}));

series.strokes.template.setAll({
  strokeWidth: 2,
});

series.bullets.push(function () {
  return am5.Bullet.new(root, {
    locationY: 0,
    sprite: am5.Circle.new(root, {
      radius: 4,
      stroke: root.interfaceColors.get("background"),
      strokeWidth: 2,
      fill: series.get("fill")
    })
  });
});


// Add scrollbar
// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
chart.set("scrollbarX", am5.Scrollbar.new(root, {
  orientation: "horizontal"
}));


let data = generateDatas(15);
series.data.setAll(data);


let container = chart.plotContainer.children.push(am5.Container.new(root, {
  layout: root.horizontalLayout,
  position: "absolute",
  x: 20,
  y: am5.percent(100),
  centerY: am5.percent(100),
  width: am5.percent(30),
  paddingLeft: 30,
  paddingRight: 30,
  paddingTop: 20,
  paddingBottom: 30
}))

// Add a label
container.children.push(am5.Label.new(root, {
  text: "Smoothing:",
  centerY: am5.percent(50),
  paddingBottom: 10
}));

// add slider for smoothing
let smoothingSlider = container.children.push(am5.Slider.new(root, {
  orientation: "horizontal",
  centerY: am5.percent(50),
  start: 1 - series.get("tension", 0.5)
}));


smoothingSlider.on("start", function (start) {
  series.set("tension", 1 - start);
})

// Make stuff animate on load
// https://www.amcharts.com/docs/v5/concepts/animations/
series.appear(1000);
chart.appear(1000, 100);
}
</client_script>